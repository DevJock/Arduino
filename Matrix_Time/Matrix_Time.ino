#include "LedControl.h"
#include "binary.h"

LedControl lc=LedControl(10,11,12,2);

int numDevices = 2;

int oldData = -1;
int cyclesPerSecond = 979;

//pins
int clockInterrupt = 0; //interrupt 0 is pin 2 on UNO
int pwmOut = 6; //pin 6

//timekeeping
int seconds = 0;
int minutes = 0;
int hours = 0;
int masterClock = 0;//number of square wave


// *CONSTANTS
const byte font5x7 [] = 
{      //Numeric Font Matrix
  B00000000,	//Space (Char 0x20)
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,

  B00100000,	//!
  B00100000,
  B00100000,
  B00100000,
  B00000000,
  B00000000,
  B00100000,

  B01010000,	//"
  B01010000,
  B01010000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,

  B01010000,	//#
  B01010000,
  B11111000,
  B01010000,
  B11111000,
  B01010000,
  B01010000,

  B00100000,	//$
  B01111000,
  B10100000,
  B01110000,
  B00101000,
  B11110000,
  B00100000,

  B11000000,	//%
  B11001000,
  B00010000,
  B00100000,
  B01000000,
  B10011000,
  B00011000,

  B01100000,	//&
  B10010000,
  B10100000,
  B01000000,
  B10101000,
  B10010000,
  B01101000,

  B01100000,	//'
  B00100000,
  B01000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,

  B00010000,	//(
  B00100000,
  B01000000,
  B01000000,
  B01000000,
  B00100000,
  B00010000,

  B01000000,	//)
  B00100000,
  B00010000,
  B00010000,
  B00010000,
  B00100000,
  B01000000,

  B00000000,	//*
  B00100000,
  B10101000,
  B01110000,
  B10101000,
  B00100000,
  B00000000,

  B00000000,	//+
  B00100000,
  B00100000,
  B11111000,
  B00100000,
  B00100000,
  B00000000,

  B00000000,	//,
  B00000000,
  B00000000,
  B00000000,
  B01100000,
  B00100000,
  B01000000,

  B00000000,	//-
  B00000000,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,

  B00000000,	//.
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B01100000,
  B01100000,

  B00000000,	///
  B00001000,
  B00010000,
  B00100000,
  B01000000,
  B10000000,
  B00000000,

  B01110000,	//0
  B10001000,
  B10011000,
  B10101000,
  B11001000,
  B10001000,
  B01110000,

  B00100000,	//1
  B01100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B01110000,

  B01110000,	//2
  B10001000,
  B00001000,
  B00010000,
  B00100000,
  B01000000,
  B11111000,

  B11111000,	//3
  B00010000,
  B00100000,
  B00010000,
  B00001000,
  B10001000,
  B01110000,

  B00010000,	//4
  B00110000,
  B01010000,
  B10010000,
  B11111000,
  B00010000,
  B00010000,

  B11111000,	//5
  B10000000,
  B11110000,
  B00001000,
  B00001000,
  B10001000,
  B01110000,

  B00110000,	//6
  B01000000,
  B10000000,
  B11110000,
  B10001000,
  B10001000,
  B01110000,

  B11111000,	//7
  B10001000,
  B00001000,
  B00010000,
  B00100000,
  B00100000,
  B00100000,

  B01110000,	//8
  B10001000,
  B10001000,
  B01110000,
  B10001000,
  B10001000,
  B01110000,

  B01110000,	//9
  B10001000,
  B10001000,
  B01111000,
  B00001000,
  B00010000,
  B01100000,

  B00000000,	//:
  B01100000,
  B01100000,
  B00000000,
  B01100000,
  B01100000,
  B00000000,

  B00000000,	//;
  B01100000,
  B01100000,
  B00000000,
  B01100000,
  B00100000,
  B01000000,

  B00010000,	//<
  B00100000,
  B01000000,
  B10000000,
  B01000000,
  B00100000,
  B00010000,

  B00000000,	//=
  B00000000,
  B11111000,
  B00000000,
  B11111000,
  B00000000,
  B00000000,

  B01000000,	//>
  B00100000,
  B00010000,
  B00001000,
  B00010000,
  B00100000,
  B01000000,

  B01110000,	//?
  B10001000,
  B00001000,
  B00010000,
  B00100000,
  B00000000,
  B00100000,

  B01110000,	//@
  B10001000,
  B00001000,
  B01101000,
  B10101000,
  B10101000,
  B01110000,

  B01110000,	//A
  B10001000,
  B10001000,
  B10001000,
  B11111000,
  B10001000,
  B10001000,

  B11110000,	//B
  B10001000,
  B10001000,
  B11110000,
  B10001000,
  B10001000,
  B11110000,

  B01110000,	//C
  B10001000,
  B10000000,
  B10000000,
  B10000000,
  B10001000,
  B01110000,

  B11100000,	//D
  B10010000,
  B10001000,
  B10001000,
  B10001000,
  B10010000,
  B11100000,

  B11111000,	//E
  B10000000,
  B10000000,
  B11110000,
  B10000000,
  B10000000,
  B11111000,

  B11111000,	//F
  B10000000,
  B10000000,
  B11110000,
  B10000000,
  B10000000,
  B10000000,

  B01110000,	//G
  B10001000,
  B10000000,
  B10111000,
  B10001000,
  B10001000,
  B01111000,

  B10001000,	//H
  B10001000,
  B10001000,
  B11111000,
  B10001000,
  B10001000,
  B10001000,

  B01110000,	//I
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B01110000,

  B00111000,	//J
  B00010000,
  B00010000,
  B00010000,
  B00010000,
  B10010000,
  B01100000,

  B10001000,	//K
  B10010000,
  B10100000,
  B11000000,
  B10100000,
  B10010000,
  B10001000,

  B10000000,	//L
  B10000000,
  B10000000,
  B10000000,
  B10000000,
  B10000000,
  B11111000,

  B10001000,	//M
  B11011000,
  B10101000,
  B10101000,
  B10001000,
  B10001000,
  B10001000,

  B10001000,	//N
  B10001000,
  B11001000,
  B10101000,
  B10011000,
  B10001000,
  B10001000,

  B01110000,	//O
  B10001000,
  B10001000,
  B10001000,
  B10001000,
  B10001000,
  B01110000,

  B11110000,	//P
  B10001000,
  B10001000,
  B11110000,
  B10000000,
  B10000000,
  B10000000,

  B01110000,	//Q
  B10001000,
  B10001000,
  B10001000,
  B10101000,
  B10010000,
  B01101000,

  B11110000,	//R
  B10001000,
  B10001000,
  B11110000,
  B10100000,
  B10010000,
  B10001000,

  B01111000,	//S
  B10000000,
  B10000000,
  B01110000,
  B00001000,
  B00001000,
  B11110000,

  B11111000,	//T
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,

  B10001000,	//U
  B10001000,
  B10001000,
  B10001000,
  B10001000,
  B10001000,
  B01110000,

  B10001000,	//V
  B10001000,
  B10001000,
  B10001000,
  B10001000,
  B01010000,
  B00100000,

  B10001000,	//W
  B10001000,
  B10001000,
  B10101000,
  B10101000,
  B10101000,
  B01010000,

  B10001000,	//X
  B10001000,
  B01010000,
  B00100000,
  B01010000,
  B10001000,
  B10001000,

  B10001000,	//Y
  B10001000,
  B10001000,
  B01010000,
  B00100000,
  B00100000,
  B00100000,

  B11111000,	//Z
  B00001000,
  B00010000,
  B00100000,
  B01000000,
  B10000000,
  B11111000,

  B01110000,	//[
  B01000000,
  B01000000,
  B01000000,
  B01000000,
  B01000000,
  B01110000,

  B00000000,	//(Backward Slash)
  B10000000,
  B01000000,
  B00100000,
  B00010000,
  B00001000,
  B00000000,

  B01110000,	//]
  B00010000,
  B00010000,
  B00010000,
  B00010000,
  B00010000,
  B01110000,

  B00100000,	//^
  B01010000,
  B10001000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,

  B00000000,	//_
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B11111000,

  B01000000,	//`
  B00100000,
  B00010000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,

  B00000000,	//a
  B00000000,
  B01110000,
  B00001000,
  B01111000,
  B10001000,
  B01111000,

  B10000000,	//b
  B10000000,
  B10110000,
  B11001000,
  B10001000,
  B10001000,
  B11110000,

  B00000000,	//c
  B00000000,
  B01110000,
  B10001000,
  B10000000,
  B10001000,
  B01110000,

  B00001000,	//d
  B00001000,
  B01101000,
  B10011000,
  B10001000,
  B10001000,
  B01111000,

  B00000000,	//e
  B00000000,
  B01110000,
  B10001000,
  B11111000,
  B10000000,
  B01110000,

  B00110000,	//f
  B01001000,
  B01000000,
  B11100000,
  B01000000,
  B01000000,
  B01000000,

  B00000000,	//g
  B01111000,
  B10001000,
  B10001000,
  B01111000,
  B00001000,
  B01110000,

  B10000000,	//h
  B10000000,
  B10110000,
  B11001000,
  B10001000,
  B10001000,
  B10001000,

  B00100000,	//i
  B00000000,
  B01100000,
  B00100000,
  B00100000,
  B00100000,
  B01110000,

  B00010000,	//j
  B00000000,
  B00110000,
  B00010000,
  B00010000,
  B10010000,
  B01100000,

  B10000000,	//k
  B10000000,
  B10010000,
  B10100000,
  B11000000,
  B10100000,
  B10010000,

  B01100000,	//l
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B01110000,

  B00000000,	//m
  B00000000,
  B11010000,
  B10101000,
  B10101000,
  B10001000,
  B10001000,

  B00000000,	//n
  B00000000,
  B10110000,
  B11001000,
  B10001000,
  B10001000,
  B10001000,

  B00000000,	//o
  B00000000,
  B01110000,
  B10001000,
  B10001000,
  B10001000,
  B01110000,

  B00000000,	//p
  B00000000,
  B11110000,
  B10001000,
  B11110000,
  B10000000,
  B10000000,

  B00000000,	//q
  B00000000,
  B01101000,
  B10011000,
  B01111000,
  B00001000,
  B00001000,

  B00000000,	//r
  B00000000,
  B10110000,
  B11001000,
  B10000000,
  B10000000,
  B10000000,

  B00000000,	//s
  B00000000,
  B01110000,
  B10000000,
  B01110000,
  B00001000,
  B11110000,

  B01000000,	//t
  B01000000,
  B11100000,
  B01000000,
  B01000000,
  B01001000,
  B00110000,

  B00000000,	//u
  B00000000,
  B10001000,
  B10001000,
  B10001000,
  B10011000,
  B01101000,

  B00000000,	//v
  B00000000,
  B10001000,
  B10001000,
  B10001000,
  B01010000,
  B00100000,

  B00000000,	//w
  B00000000,
  B10001000,
  B10101000,
  B10101000,
  B10101000,
  B01010000,

  B00000000,	//x
  B00000000,
  B10001000,
  B01010000,
  B00100000,
  B01010000,
  B10001000,

  B00000000,	//y
  B00000000,
  B10001000,
  B10001000,
  B01111000,
  B00001000,
  B01110000,

  B00000000,	//z
  B00000000,
  B11111000,
  B00010000,
  B00100000,
  B01000000,
  B11111000,

  B00010000,	//{
  B00100000,
  B00100000,
  B01000000,
  B00100000,
  B00100000,
  B00010000,

  B00100000,	//|
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,
  B00100000,

  B01000000,	//}
  B00100000,
  B00100000,
  B00010000,
  B00100000,
  B00100000,
  B01000000,

  B00000000,	//~
  B00000000,
  B00000000,
  B01101000,
  B10010000,
  B00000000,
  B00000000,

  B01100000,	// (Char 0x7F)
  B10010000,
  B10010000,
  B01100000,
  B00000000,
  B00000000,
  B00000000,
};



void setup()
{
  Serial.begin(9600);
  attachInterrupt(clockInterrupt, clockCounter, RISING);
  delay(2000);
  analogReference(DEFAULT);
  Serial.println(pwmOut);
  analogWrite(pwmOut, 127);
  for(int i =0;i<2;i++)
  {
    lc.shutdown(i,false);
    lc.setIntensity(i,1);
    lc.clearDisplay(i);
  }
}

void loop()
{ 
  if(Serial.available())
  {
    String in = Serial.readStringUntil('\n');
    Serial.print("Received Data: ");
    Serial.println(in);
    setData(in);
  }
  else
  {
    
  }
}

void serialPrintTime()
{
  if(hours<10)
  {
    Serial.print("0");
  }
  Serial.print(hours);
  Serial.print(":");
  if(minutes<10)
  {
    Serial.print("0");
  }
  Serial.print(minutes);
  Serial.print(":");
  if(seconds<10)
  {
    Serial.print("0");
  }
  Serial.println(seconds);
}

void displayTime()
{
  int d = 0;
  d = hours * 100 + minutes;
}

void setData(String input)
{
  hours = input.substring(0,2).toInt();
  minutes = input.substring(2,4).toInt();
  seconds = input.substring(4,6).toInt();
}

void clockCounter()
{
  masterClock ++;
  if(masterClock == cyclesPerSecond)
  {
    seconds ++; 
    masterClock = 0; 
    if(seconds==60)
    {
      minutes++;
      seconds = 0;//reset seconds counter
      if(minutes==60)
      {
        hours++;
        minutes = 0;
      }
    }
  serialPrintTime();
  displayTime();
  }
  return;
}



